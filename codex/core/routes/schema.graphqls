#import ./constraints.graphqls

scalar Mixed
scalar Assoc
directive @assoc on FIELD

type Query {
    me: User @auth
    codex: Codex! @field(resolver: "Codex\\Api\\GraphQL\\CodexQueries@resolve")
    config: Config!

    projects:[Project!]! @constraints(resolver: "Codex\\Api\\GraphQL\\CodexQueries@projects")
    project(key:ID):Project! @field(resolver: "Codex\\Api\\GraphQL\\CodexQueries@project")

    revisions(projectKey: ID) : [Revision!]!  @constraints(resolver: "Codex\\Api\\GraphQL\\CodexQueries@revisions")
    revision(projectKey: ID, revisionKey: ID) : Revision!  @field(resolver: "Codex\\Api\\GraphQL\\CodexQueries@revision")

    documents(projectKey: ID, revisionKey: ID) : [Document!]!  @constraints(resolver: "Codex\\Api\\GraphQL\\CodexQueries@documents")
    document(projectKey: ID, revisionKey: ID, documentKey: ID) : Document!  @field(resolver: "Codex\\Api\\GraphQL\\CodexQueries@document")
    diff(left: String, right: String) : Diff!  @field(resolver: "Codex\\Api\\GraphQL\\CodexQueries@diff")
}

type User {
    id: ID!
}

type Codex {
    projects:[Project!]! @constraints(resolver: "Codex\\Api\\GraphQL\\CodexQueries@projects")
    project(key:ID):Project! @field(resolver: "Codex\\Api\\GraphQL\\CodexQueries@project")

    revisions(projectKey: ID) : [Revision!]!  @constraints(resolver: "Codex\\Api\\GraphQL\\CodexQueries@revisions")
    revision(projectKey: ID, revisionKey: ID) : Revision!  @field(resolver: "Codex\\Api\\GraphQL\\CodexQueries@revision")

    documents(projectKey: ID, revisionKey: ID) : [Document!]!  @constraints(resolver: "Codex\\Api\\GraphQL\\CodexQueries@documents")
    document(projectKey: ID, revisionKey: ID, documentKey: ID) : Document!  @field(resolver: "Codex\\Api\\GraphQL\\CodexQueries@document")
    diff(left: String, right: String) : Diff!  @field(resolver: "Codex\\Api\\GraphQL\\CodexQueries@diff")
}

type Diff {
    attributes: Assoc
}
type Config {
    name:String!
    env:String!
    debug:Boolean!
    timezone:String!
    locale:String!
    fallback_locale:String!
    url:String!
}

type Project {
    revisions: [Revision!]! @constraints(resolver: "Codex\\Api\\GraphQL\\CodexQueries@revisions")
    revision(revisionKey: ID!): Revision! @field(resolver: "Codex\\Api\\GraphQL\\CodexQueries@revision")
}


type Revision {
    documents: [Document!]! @constraints(resolver: "Codex\\Api\\GraphQL\\CodexQueries@documents")
    document(documentKey: ID!): Document! @field(resolver: "Codex\\Api\\GraphQL\\CodexQueries@document")
    project: Project!
}


type Document {
    revision: Revision!
}
